[
  {
    "modelVersion": "1.3.0",
    "uuid": "1503df72-48a0-4ba2-b5c2-afdb8e7e0725",
    "plugin": {
      "modelVersion": "1.2.0",
      "name": "com.hitachi.foundry.plugin.job.hcm_forecast",
      "displayName": "Forecasting",
      "description": "Forecasting job producing predictions of metric data collected by Monitor App."
    },
    "settings": {
      "modelVersion": "1.3.0",
      "allowedInstanceUuids": [
        "29b52bcd-8b49-4d65-9e0a-368b3b899a3d",
        "3816cd9c-a21e-40ff-bb8e-3e0d2cc3180d",
        "c8a12826-14cf-43e9-bb6e-8fcd0dca14af",
        "5aa5645c-f4c6-4ef5-97c7-904d6e0f8426",
        "1d3e1af2-6698-43c1-b0e0-883e69ddfb7d",
        "3acb2973-b44f-4c8c-bd9d-f735ce9bd6c4",
        "d5f88a07-a66b-45f9-b4c3-7ee2d9ae168e",
        "64f7ff55-090e-4fd2-91c8-487f7d672f23",
        "c3660ee9-d0c4-4a09-a164-efc2654ab2fc",
        "f1704f66-0f41-43d5-a28d-bb27a3eb073b",
        "603e1e4d-03bd-4656-b32d-fbf8dc4a943e",
        "fafeed2a-c6ba-465f-a61f-7fc6ed5c528f",
        "9cfccb1e-1660-4568-81ac-6ddee4416462",
        "692aa358-f262-4f7c-88e2-a563d8a4a792",
        "d65cb6fb-bd28-46d5-80a7-826ef2199634"
      ],
      "schedule": {
        "modelVersion": "1.1.0",
        "slots": []
      },
      "pluginName": "com.hitachi.foundry.plugin.job.hcm_forecast",
      "config": {
        "modelVersion": "1.1.0",
        "propertyGroups": [
          {
            "modelVersion": "1.3.0",
            "name": "Options",
            "description": "Changing these settings will only be captured by new started jobs.",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "JOB_SETTINGS",
                "type": "checkbox",
                "userVisibleName": "Job Settings",
                "userVisibleDescription": "HCM Lambda job option settings",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "mem",
                "type": "text",
                "userVisibleName": "Container Memory",
                "userVisibleDescription": "This is the hard memory limit for the docker container. It is recommended that this limit be roughly 200MB larger than the heap size of the application running inside the container.",
                "propertyVisibilityTrigger": "JOB_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": true,
                "value": "500"
              },
              {
                "modelVersion": "1.1.0",
                "name": "cpus",
                "type": "text",
                "userVisibleName": "CPU",
                "userVisibleDescription": "CPU time slice as a decimal number e.g. 0.5 to represent process priority hint.",
                "propertyVisibilityTrigger": "JOB_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": true,
                "value": "0.001"
              },
              {
                "modelVersion": "1.1.0",
                "name": "ADVANCED_SETTINGS",
                "type": "hidden",
                "userVisibleName": "Advanced Settings",
                "userVisibleDescription": "Advanced Lambda job container, environment, and internal settings",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "image",
                "type": "text",
                "userVisibleName": "Container image",
                "userVisibleDescription": "Override the default docker image for the job. A null or empty value will use the default docker image. This can not be set to the default image com.hitachi.foundry.job/hcm_analytics:30.0.0.4",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "args",
                "type": "text",
                "userVisibleName": "Arguments for the entry point",
                "userVisibleDescription": "Newline separated list of optional arguments to pass to the entry point.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "supportsHeartbeat",
                "type": "checkbox",
                "userVisibleName": "Supports Heartbeat",
                "userVisibleDescription": "If this is true, the heartbeat URL will be populated by the lambda service.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": "false"
              },
              {
                "modelVersion": "1.1.0",
                "name": "lambdaServiceSupported",
                "type": "hidden",
                "userVisibleName": "Lambda Service Supported",
                "userVisibleDescription": "When set to true, this job can be run in a Lambda service pipeline",
                "required": false,
                "value": "true"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "JOB_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "heartbeatUrl",
                "type": "text",
                "userVisibleName": "Heartbeat URL",
                "userVisibleDescription": "Heartbeat URL for the job. If the URL contains ${UUID}, then the job's UUID will be inserted at that location in the URL. If the heartbeat URL is not set, then the job will not heartbeat.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageUrl",
                "type": "text",
                "userVisibleName": "Package URL",
                "userVisibleDescription": "URL for the package of code to execute",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageEntryPoint",
                "type": "text",
                "userVisibleName": "Package Entry Point",
                "userVisibleDescription": "Entry point to execute after unpacking the package",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageHeaders",
                "type": "password",
                "userVisibleName": "Package Download Headers",
                "userVisibleDescription": "New line separated list of headers to be used when downloading the package from the supplied URL",
                "required": false,
                "value": "<@@%%--using stored password--%%@@>"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Environment Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_HOST",
                "type": "text",
                "userVisibleName": "AMQP Host",
                "userVisibleDescription": "AMQP host used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_PORT",
                "type": "text",
                "userVisibleName": "AMQP Port",
                "userVisibleDescription": "AMQP port used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_USERNAME",
                "type": "text",
                "userVisibleName": "AMQP Username",
                "userVisibleDescription": "AMQP user name used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_VIRTHOST",
                "type": "text",
                "userVisibleName": "AMQP Virtual Host",
                "userVisibleDescription": "AMQP virtual host used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_CONTROL_EXCHANGE",
                "type": "text",
                "userVisibleName": "Workflow control exchange",
                "userVisibleDescription": "Control exchange used by the stage function to send control commands back to the workflow",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_INPUT_QUEUE",
                "type": "text",
                "userVisibleName": "Input Queue",
                "userVisibleDescription": "Input queue is the queue from which the stage function receives messages to process.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PREFETCH_COUNT",
                "type": "text",
                "userVisibleName": "Prefetch Count",
                "userVisibleDescription": "Prefetch Count is used by the RabbitMQ client to determine how many unacknowledged messages a stage function instance can receive before it's considered busy. A busy stage function instance does not receive messages until it acknowledges some of the pending ones.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_OUTPUT_EXCHANGE",
                "type": "text",
                "userVisibleName": "Output Exchange",
                "userVisibleDescription": "Output exchange is used by the stage function to emit messages, such as results, events, etc.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_OUTPUT_TOPICS",
                "type": "text",
                "userVisibleName": "Output Topics",
                "userVisibleDescription": "Output topics is used by the stage function to emit messages, such as results, events, etc.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PIPELINE_NAME",
                "type": "text",
                "userVisibleName": "Pipeline Name",
                "userVisibleDescription": "Pipeline name",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PIPELINE_UUID",
                "type": "text",
                "userVisibleName": "Pipeline ID",
                "userVisibleDescription": "Pipeline unique identifier",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_NAME",
                "type": "text",
                "userVisibleName": "Lambda Job Name",
                "userVisibleDescription": "Lambda job name",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_MESSAGE_BROKER_TYPE",
                "type": "text",
                "userVisibleName": "Message Broker Type",
                "userVisibleDescription": "Message Broker queuing infrastructure used between lambda jobs",
                "required": true,
                "value": ""
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Internal Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_PASSWORD",
                "type": "password",
                "userVisibleName": "AMQP Password",
                "userVisibleDescription": "AMQP password used by the RabbitMQ client",
                "required": true,
                "value": "<@@%%--using stored password--%%@@>"
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_FUNCTION_SETTINGS",
                "type": "password",
                "userVisibleName": "Lambda job package function settings",
                "userVisibleDescription": "Lambda job user supplied package function settings",
                "required": true,
                "value": "<@@%%--using stored password--%%@@>"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          }
        ]
      }
    },
    "volumeInfo": [
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": false,
        "readOnly": false,
        "driver": "",
        "driverOptions": [],
        "volumeNames": [],
        "description": "The volume where logs are stored. The logs will be stored in the Monitor App Analytics service's logs volume in the 'pipelines' directory.",
        "name": "log",
        "mountPoint": "/opt/job/log/",
        "isManaged": false,
        "isCollection": false
      },
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": false,
        "readOnly": false,
        "driver": "bind-mount",
        "driverOptions": [
          {
            "modelVersion": "1.3.0",
            "key": "hostpath",
            "val": "${data_dir}/${plugin_name}/${container_inst_uuid}"
          }
        ],
        "volumeNames": [],
        "description": "The volume where data is stored.",
        "name": "data",
        "mountPoint": "/opt/job/data/",
        "isManaged": true,
        "isCollection": false
      }
    ],
    "serviceUnits": 5
  },
  {
    "modelVersion": "1.3.0",
    "uuid": "9fdbf112-88b7-4735-a3d6-2b02817aa280",
    "plugin": {
      "modelVersion": "1.2.0",
      "name": "com.hitachi.foundry.plugin.job.hcm_anomaly_detection",
      "displayName": "Anomaly Detection",
      "description": "Anomaly detection job finding anomalies in the Monitor App collected metric data."
    },
    "settings": {
      "modelVersion": "1.3.0",
      "allowedInstanceUuids": [
        "29b52bcd-8b49-4d65-9e0a-368b3b899a3d",
        "3816cd9c-a21e-40ff-bb8e-3e0d2cc3180d",
        "c8a12826-14cf-43e9-bb6e-8fcd0dca14af",
        "5aa5645c-f4c6-4ef5-97c7-904d6e0f8426",
        "1d3e1af2-6698-43c1-b0e0-883e69ddfb7d",
        "3acb2973-b44f-4c8c-bd9d-f735ce9bd6c4",
        "d5f88a07-a66b-45f9-b4c3-7ee2d9ae168e",
        "64f7ff55-090e-4fd2-91c8-487f7d672f23",
        "c3660ee9-d0c4-4a09-a164-efc2654ab2fc",
        "f1704f66-0f41-43d5-a28d-bb27a3eb073b",
        "603e1e4d-03bd-4656-b32d-fbf8dc4a943e",
        "fafeed2a-c6ba-465f-a61f-7fc6ed5c528f",
        "9cfccb1e-1660-4568-81ac-6ddee4416462",
        "692aa358-f262-4f7c-88e2-a563d8a4a792",
        "d65cb6fb-bd28-46d5-80a7-826ef2199634"
      ],
      "schedule": {
        "modelVersion": "1.1.0",
        "slots": []
      },
      "pluginName": "com.hitachi.foundry.plugin.job.hcm_anomaly_detection",
      "config": {
        "modelVersion": "1.1.0",
        "propertyGroups": [
          {
            "modelVersion": "1.3.0",
            "name": "Options",
            "description": "Changing these settings will only be captured by new started jobs.",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "JOB_SETTINGS",
                "type": "checkbox",
                "userVisibleName": "Job Settings",
                "userVisibleDescription": "HCM Lambda job option settings",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "mem",
                "type": "text",
                "userVisibleName": "Container Memory",
                "userVisibleDescription": "This is the hard memory limit for the docker container. It is recommended that this limit be roughly 200MB larger than the heap size of the application running inside the container.",
                "propertyVisibilityTrigger": "JOB_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": true,
                "value": "125"
              },
              {
                "modelVersion": "1.1.0",
                "name": "cpus",
                "type": "text",
                "userVisibleName": "CPU",
                "userVisibleDescription": "CPU time slice as a decimal number e.g. 0.5 to represent process priority hint.",
                "propertyVisibilityTrigger": "JOB_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": true,
                "value": "0.001"
              },
              {
                "modelVersion": "1.1.0",
                "name": "ADVANCED_SETTINGS",
                "type": "hidden",
                "userVisibleName": "Advanced Settings",
                "userVisibleDescription": "Advanced Lambda job container, environment, and internal settings",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "image",
                "type": "text",
                "userVisibleName": "Container image",
                "userVisibleDescription": "Override the default docker image for the job. A null or empty value will use the default docker image. This can not be set to the default image com.hitachi.foundry.job/hcm_analytics:30.0.0.4",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "args",
                "type": "text",
                "userVisibleName": "Arguments for the entry point",
                "userVisibleDescription": "Newline separated list of optional arguments to pass to the entry point.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "supportsHeartbeat",
                "type": "checkbox",
                "userVisibleName": "Supports Heartbeat",
                "userVisibleDescription": "If this is true, the heartbeat URL will be populated by the lambda service.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": "false"
              },
              {
                "modelVersion": "1.1.0",
                "name": "lambdaServiceSupported",
                "type": "hidden",
                "userVisibleName": "Lambda Service Supported",
                "userVisibleDescription": "When set to true, this job can be run in a Lambda service pipeline",
                "required": false,
                "value": "true"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "JOB_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "heartbeatUrl",
                "type": "text",
                "userVisibleName": "Heartbeat URL",
                "userVisibleDescription": "Heartbeat URL for the job. If the URL contains ${UUID}, then the job's UUID will be inserted at that location in the URL. If the heartbeat URL is not set, then the job will not heartbeat.",
                "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
                "propertyVisibilityTriggerValue": "true",
                "required": false,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageUrl",
                "type": "text",
                "userVisibleName": "Package URL",
                "userVisibleDescription": "URL for the package of code to execute",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageEntryPoint",
                "type": "text",
                "userVisibleName": "Package Entry Point",
                "userVisibleDescription": "Entry point to execute after unpacking the package",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "packageHeaders",
                "type": "password",
                "userVisibleName": "Package Download Headers",
                "userVisibleDescription": "New line separated list of headers to be used when downloading the package from the supplied URL",
                "required": false,
                "value": "<@@%%--using stored password--%%@@>"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Environment Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_HOST",
                "type": "text",
                "userVisibleName": "AMQP Host",
                "userVisibleDescription": "AMQP host used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_PORT",
                "type": "text",
                "userVisibleName": "AMQP Port",
                "userVisibleDescription": "AMQP port used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_USERNAME",
                "type": "text",
                "userVisibleName": "AMQP Username",
                "userVisibleDescription": "AMQP user name used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_VIRTHOST",
                "type": "text",
                "userVisibleName": "AMQP Virtual Host",
                "userVisibleDescription": "AMQP virtual host used by the RabbitMQ client",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_CONTROL_EXCHANGE",
                "type": "text",
                "userVisibleName": "Workflow control exchange",
                "userVisibleDescription": "Control exchange used by the stage function to send control commands back to the workflow",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_INPUT_QUEUE",
                "type": "text",
                "userVisibleName": "Input Queue",
                "userVisibleDescription": "Input queue is the queue from which the stage function receives messages to process.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PREFETCH_COUNT",
                "type": "text",
                "userVisibleName": "Prefetch Count",
                "userVisibleDescription": "Prefetch Count is used by the RabbitMQ client to determine how many unacknowledged messages a stage function instance can receive before it's considered busy. A busy stage function instance does not receive messages until it acknowledges some of the pending ones.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_OUTPUT_EXCHANGE",
                "type": "text",
                "userVisibleName": "Output Exchange",
                "userVisibleDescription": "Output exchange is used by the stage function to emit messages, such as results, events, etc.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_OUTPUT_TOPICS",
                "type": "text",
                "userVisibleName": "Output Topics",
                "userVisibleDescription": "Output topics is used by the stage function to emit messages, such as results, events, etc.",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PIPELINE_NAME",
                "type": "text",
                "userVisibleName": "Pipeline Name",
                "userVisibleDescription": "Pipeline name",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_PIPELINE_UUID",
                "type": "text",
                "userVisibleName": "Pipeline ID",
                "userVisibleDescription": "Pipeline unique identifier",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_NAME",
                "type": "text",
                "userVisibleName": "Lambda Job Name",
                "userVisibleDescription": "Lambda job name",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_MESSAGE_BROKER_TYPE",
                "type": "text",
                "userVisibleName": "Message Broker Type",
                "userVisibleDescription": "Message Broker queuing infrastructure used between lambda jobs",
                "required": true,
                "value": ""
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          },
          {
            "modelVersion": "1.3.0",
            "name": "Job Internal Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_AMQP_PASSWORD",
                "type": "password",
                "userVisibleName": "AMQP Password",
                "userVisibleDescription": "AMQP password used by the RabbitMQ client",
                "required": true,
                "value": "<@@%%--using stored password--%%@@>"
              },
              {
                "modelVersion": "1.1.0",
                "name": "LAMBDA_JOB_FUNCTION_SETTINGS",
                "type": "password",
                "userVisibleName": "Lambda job package function settings",
                "userVisibleDescription": "Lambda job user supplied package function settings",
                "required": true,
                "value": "<@@%%--using stored password--%%@@>"
              }
            ],
            "propertyVisibilityGroupName": "Options",
            "propertyVisibilityTrigger": "ADVANCED_SETTINGS",
            "propertyVisibilityTriggerValue": "true"
          }
        ]
      }
    },
    "volumeInfo": [
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": false,
        "readOnly": false,
        "driver": "bind-mount",
        "driverOptions": [
          {
            "modelVersion": "1.3.0",
            "key": "hostpath",
            "val": "${data_dir}/${plugin_name}/${container_inst_uuid}"
          }
        ],
        "volumeNames": [],
        "description": "The volume where data is stored.",
        "name": "data",
        "mountPoint": "/opt/job/data/",
        "isManaged": true,
        "isCollection": false
      },
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": false,
        "readOnly": false,
        "driver": "",
        "driverOptions": [],
        "volumeNames": [],
        "description": "The volume where logs are stored. The logs will be stored in the Monitor App Analytics service's logs volume in the 'pipelines' directory.",
        "name": "log",
        "mountPoint": "/opt/job/log/",
        "isManaged": false,
        "isCollection": false
      }
    ],
    "serviceUnits": 5
  },
  {
    "modelVersion": "1.3.0",
    "uuid": "cc9b016d-7e57-48cb-9ae4-c375402c99b3",
    "plugin": {
      "modelVersion": "1.2.0",
      "name": "com.hds.ensemble.plugins.job.workflow",
      "displayName": "Workflow-Agent",
      "description": "Job for the execution of Workflows"
    },
    "settings": {
      "modelVersion": "1.3.0",
      "allowedInstanceUuids": [
        "c3660ee9-d0c4-4a09-a164-efc2654ab2fc",
        "5aa5645c-f4c6-4ef5-97c7-904d6e0f8426",
        "d5f88a07-a66b-45f9-b4c3-7ee2d9ae168e",
        "64f7ff55-090e-4fd2-91c8-487f7d672f23"
      ],
      "schedule": {
        "modelVersion": "1.1.0",
        "slots": []
      },
      "pluginName": "com.hds.ensemble.plugins.job.workflow",
      "config": {
        "modelVersion": "1.1.0",
        "propertyGroups": [
          {
            "modelVersion": "1.3.0",
            "name": "Options",
            "description": "Changing these settings will only be captured by new started jobs.",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "mem",
                "type": "text",
                "userVisibleName": "Container Memory",
                "userVisibleDescription": "This is the hard memory limit for the docker container. It is recommended that this limit be roughly 200MB larger than the heap size of the application running inside the container.",
                "required": true,
                "value": "1300.0"
              },
              {
                "modelVersion": "1.1.0",
                "name": "cpus",
                "type": "text",
                "userVisibleName": "CPU",
                "userVisibleDescription": "CPU time slice as a decimal number e.g. 0.5 to represent process priority hint.",
                "required": true,
                "value": "0.1"
              }
            ]
          },
          {
            "modelVersion": "1.3.0",
            "name": "Workflow Settings",
            "type": "default",
            "configProperties": [
              {
                "modelVersion": "1.1.0",
                "name": "taskId",
                "type": "hidden",
                "userVisibleName": "Workflow Task ID",
                "userVisibleDescription": "The UUID of the workflow task to run",
                "required": true,
                "value": ""
              },
              {
                "modelVersion": "1.1.0",
                "name": "driverHeapLimit",
                "type": "hidden",
                "userVisibleName": "Driver Heap limit",
                "userVisibleDescription": "How much memory to allow the driver to use in java heap.",
                "required": false,
                "value": "1024m"
              },
              {
                "modelVersion": "1.1.0",
                "name": "executorHeapLimit",
                "type": "hidden",
                "userVisibleName": "Executor Heap limit",
                "userVisibleDescription": "How much memory to allow the executor jvms to use in java heap on each node.",
                "required": false,
                "value": "1024m"
              },
              {
                "modelVersion": "1.1.0",
                "name": "driver_debug_port",
                "type": "text",
                "userVisibleName": "Driver Debug Port",
                "userVisibleDescription": "The port to use for debugging the job driver. Only used if debug is set to true in cluster.config",
                "required": false,
                "value": "5005"
              },
              {
                "modelVersion": "1.1.0",
                "name": "executor_debug_port",
                "type": "text",
                "userVisibleName": "Executor Debug Port",
                "userVisibleDescription": "The port to use for debugging the job executor. Only used if debug is set to true in cluster.config",
                "required": false,
                "value": "5008"
              },
              {
                "modelVersion": "1.1.0",
                "name": "ui_port",
                "type": "text",
                "userVisibleName": "Default UI Port",
                "userVisibleDescription": "The default port used for the spark UI. Spark will automatically pick another port if this one is in use.",
                "required": false,
                "value": "4040"
              }
            ]
          }
        ]
      }
    },
    "volumeInfo": [
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": true,
        "readOnly": false,
        "driver": "bind-mount",
        "driverOptions": [
          {
            "modelVersion": "1.3.0",
            "key": "hostpath",
            "val": "${log_dir}/${plugin_name}/${container_inst_uuid}"
          }
        ],
        "volumeNames": [],
        "description": "The volume where logs are stored. (note: only bind mounts are supported for customization)",
        "name": "log",
        "mountPoint": "/opt/job/log/",
        "isManaged": true,
        "isCollection": false
      },
      {
        "modelVersion": "1.3.0",
        "autoDelete": true,
        "logRotate": false,
        "readOnly": false,
        "driver": "bind-mount",
        "driverOptions": [
          {
            "modelVersion": "1.3.0",
            "key": "hostpath",
            "val": "${data_dir}/${plugin_name}/${container_inst_uuid}"
          }
        ],
        "volumeNames": [],
        "description": "The volume where data is stored. (note: only bind mounts are supported for customization)",
        "name": "data",
        "mountPoint": "/opt/job/data/",
        "isManaged": true,
        "isCollection": false
      }
    ],
    "serviceUnits": 50
  }
]